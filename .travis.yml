addons:
  hosts:
  - db
before_script:
- sudo apt-get -qq -y update
- sudo apt-get -qq -y install jq coreutils curl
- sudo apt-get install -y nodejs-legacy npm
- if [[ -n "$(gofmt -l .)" ]]; then echo "The following files were not formatted properly!";
  gofmt -l .; exit 1; fi
- tools/test/run_ci_server.sh || travis_terminate 1
branches:
  only:
  - master
  - develop
deploy:
  access_key_id: GOOG4QOEU2HGYSA6CRE6
  acl: public-read
  bucket: weaviate-dist
  detect_encoding: true
  provider: gcs
  secret_access_key:
    secure: EhYZQtPi22lksyksxWBRJxtqDcnld+CryI9L577cc+VoC8G57P9hWqrPByh22J/3X5iLf1ryNQww68RU2RJTTagPEM11O1eDwvWiso4LF2X+od6cZpwy4+FmQ0XUY7OD/65Ej0E/Hek4v0WL4B9OouWM/x5awO4iHm6ef9EniGw5wlPuqEM9cwiQWVxki8YUyKuJbWkI658eAGYl5xxj1LGQTJuCf/IiWfcQ/R9IV+PruXJ9Alh8DK4RMGDmaqbftTo5aKeidGgX+jef58yY3cgIWyDr5HAr5IFQ1hMpjHWbsl4Hhy1jc3HSS5x9BLbdD76JKHyUpTLk7t+DoM/Jks1bT2bjDBfBAtNK83JorjO95VGOZZs08FOuUylvcp+5dB49OqmAuyYiIAEe6rRK1lyQcaktIXYx30UIklTJnCVdIRu+HNbkzOadz1RlOpN3M7W2Nb5vDYzxLnfUMKJw4G1GCgUyBByNzAUUpTp2jjxR4tnVpHtbXVcWU+wVTCANV7SY41hqIFDTe5mnf8bxL9d2f1xjBsANXl1wONnVbgPZN2XaxNmHR/GvGx0h0dFO/BtYfzMu8LwrUbNKWzuxAa7VuyVfjg6wkJh1bmzP2jsZZiOWFVAlT0++1cWkq9c+oPh6tXYuvnHvvXPRigrf7AEiQss+NnGJJvitXDmo+5w=
  skip_cleanup: true
  on:
    branch:
    - master
    - develop
go:
- '1.11'
env:
  matrix:
  - GO111MODULE=on
  global:
  - secure: e3v2Z4eNP29EKqS0NBlakfe3GdA6j1anZevQjMgYftWdecC9K4XGKg8RfLK+G7Q4V+DJB5iEzKLQTKgBAYPxsMPFWDjcEud+nnYPkIlBZe3pGx822Xz0MkO6E5yga/laDgaNtPmiPR62YBI5Vhzmdrsbeml5ldaTvRScLXUe/CCvSG5kYuzDLxJIFq+F7eljv9zeBFZlWVza1he0qitQsh1yhGNvXLTr9ia98e5JTEjPsPma2K51ThatbwI/IvirPvhI9zPeac+IwdBbLvAd0UbZi2ARjMjBtm+sw7jE/sEtsLW/ZTJA/cfpIdmEj6/6g+bnJPmYAm4Z9e0a8cju3DONwLuJfsDWKUsdWGMuLsKCetpRJXYbKodQtHgpzpzaLslNvLQtxDXuqdmK9eHFBVx6g2DDcaQ3KuSZBh4raJcQhyY0sobMXbkGXmE5PxWnHcQUXExKJN1pBpIlLtuN3SI0OHp3hhYmDYnERXjWI9AKHkaDHUL5ZnHwIKzdwlS7HlVW+zuwP1762tBMmwkZGYIIFTT6t3QCaUw74FsFQ+/CDVNSPlOpymyHI1Xp8W24LKGpAqG7Yf1BITWxPoyyv5EVrTauqikYUvyBQ8TQu8JxqaaeuC5qVJNw1ccrht45X+4U0etXrOZkHOKusIUapDdepbR71Z5xfRGRTI7YuXA=
  - secure: Z72hzx3Q03ZU8bNF64dziZnEYkRL+C1jlaj8N1Sj60zesapHnB8RNcgslc0UZCdxTz5DCMVSsF/fjLdzqpR85aEKoOgFvGGVi+/44g1GB8ai01RDsJ3Ig7HsG4i9IJpLmFL/LYm+cxmbTD6bblUZNVgdmaAjdswZJvqJa79JmM392LrrGvaPEE+rGX3T0VPJcGH66pwXVr7ZR4Ogkw87hDKjJ7YqxicT/psunzzBiE3YE9c6IgW3ThkbaMCj239cnh10XysdK0BRw+90sPWDjQTnBcozkQ2NMgguVOIq+/zuZmQaCyvUhPZP1Us7XYBskmtEBsvU+XzbvyrCSV8qCZCnfvLwqHHfzSbkCrd3U8XpRVJP851c79lYfPvZUQlvCx2MBHOVFbUYYnHdHUAHhBV96wo+saK/m0mS9ey4QGBe+9U+1Qzwk1SwWP/aexCdjul7lQCJjXonVsSfyPj/cDaqPnCnl3Qs+PFk88XV1Ack8FlhyQqmOpYoiUBPlqSSBfvSxpbJ34dbUF7uXxpkRSG+PV/UdmNYYuFL0U5agUJ4HkiJ5Bo/iO6Y2nD3BfWSRtyQqOdcPU8jlSQzrTizbs3/TlPEvk1LLufbSgU/sbsgQwMD7m7viqwyENOBAQLuVlq5jKcOB+e1jmmP/S7WRZh4O/A5LWpkTMDleXBqnYw=
language: go
install:
- curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
  > ./cc-test-reporter
- chmod +x ./cc-test-reporter
script:
# run node prototype
- tools/test/run_ci_node_server.sh || travis_terminate 1
# run tests
- |
  ./cc-test-reporter before-build
  for pkg in $(go list ./... | grep -v main); do
      if ! go test -race -v -coverprofile=$(echo $pkg | tr / -).cover $pkg; then
        echo "Test for $pkg failed" >&2
        travis_terminate 1
      fi
  done
  echo "mode: set" > c.out
  grep -h -v "^mode:" ./*.cover >> c.out
  rm -f *.cover
  ./cc-test-reporter after-build
after_script:
# build binary for GOOS=linux GOARCH=amd64
# building in PR only happens to validate if binary can be created
- CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o ./dist/weaviate  -a -tags netgo -ldflags '-w -extldflags "-static"' ./cmd/weaviate-server
- |
  # If the branch is not master or develop we are done :-)
  if [ $TRAVIS_BRANCH -ne "master" ] && [ $TRAVIS_BRANCH -ne "develop" ]; then
    travis_terminate 0
  fi
  # if not pull request, handle versioning
  if [ $TRAVIS_PULL_REQUEST = "false" ]; then
      # Make distribution dir if not exsists
      mkdir -p dist
      mkdir -p releases
      # if master, upload version nr otherwise nightly
      if [ $TRAVIS_BRANCH = "master" ]; then
          # mv to releases
          mkdir -p releases/$(cat openapi-specs/schema.json | jq -r '.info.version')
          mv ./dist/weaviate ./releases/$(cat openapi-specs/schema.json | jq -r '.info.version')/weaviate
          # Create txt file with version number
          echo $(cat openapi-specs/schema.json | jq -r '.info.version') > releases/latest.master.txt
          # Check if the version number is now, if not, kill and fail the process
          if [[ `wget -S --spider https://storage.googleapis.com/weaviate-dist/releases/$(cat openapi-specs/schema.json | jq -r '.info.version')/config.yaml 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
              echo "ERROR - This version is already released, master build will fail! Increate version number in OPENAPI schema file"
              exit 1
          fi
      fi
      if [ $TRAVIS_BRANCH = "develop" ]; then
          # if develop, create nightly
          mkdir -p releases/nightly
          mv ./dist/weaviate ./releases/nightly/weaviate
          # Create txt file with version number of nightly build
          echo $(cat openapi-specs/schema.json | jq -r '.info.version') > releases/latest.nightly.txt
      fi
      # remove all except for releases
      rm -r !(releases)
  fi
services:
- docker
sudo: required
